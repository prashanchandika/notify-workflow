name: Notify Workflow
on:
  workflow_call:
    inputs:
      job_list:
        required: true
        type: string
      start_time:
        required: true
        type: string
    secrets:
      GH_TOKEN:
        required: true  # If you need authentication for notifications

jobs:
  notify:
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Convert Jobs to JSON
        run: |
          echo '${{ inputs.job_list }}' > job_list.json
          cat job_list.json  # Debugging output

      - name: Determine Failed Jobs
        run: |
          FAILED_JOBS=""
          for job in $(jq -r 'keys[]' job_list.json); do
            RESULT=$(jq -r ".\"$job\".result" job_list.json)
            if [[ "$RESULT" == "failure" ]]; then
              FAILED_JOBS+="‚ùå $job failed\n"
            fi
          done

          if [[ -z "$FAILED_JOBS" ]]; then
            echo "WORKFLOW_STATUS=‚úÖ All jobs succeeded!" >> $GITHUB_ENV
          else
            echo -e "$FAILED_JOBS" > failed_jobs.txt
            echo "WORKFLOW_STATUS=‚ùå Some jobs failed!" >> $GITHUB_ENV
          fi

      - name: Capture End Time & Calculate Deployment Time
        run: |
          END_TIME=$(date +%s)
          START_TIME=${{ inputs.start_time }}
          ELAPSED_TIME=$((END_TIME - START_TIME))
          DEPLOY_TIME="$((ELAPSED_TIME / 60))m $((ELAPSED_TIME % 60))s"
          
          echo "DEPLOY_TIME=$DEPLOY_TIME" >> $GITHUB_ENV
          echo "Deployment Time: $DEPLOY_TIME"

      - name: Send Notification
        run: |
          echo "üöÄ Workflow Status: ${{ env.WORKFLOW_STATUS }}"
          cat failed_jobs.txt 2>/dev/null || echo "No failures"
          echo "‚è≥ Deployment Time: ${{ env.DEPLOY_TIME }}"
